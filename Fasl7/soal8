using System;

public class Node
{
    public int Data;
    public Node Next;
    public Node Prev;

    public Node(int data)
    {
        Data = data;
        Next = null;
        Prev = null;
    }
}

public class DoublyLinkedList
{
    public Node Head;

    public DoublyLinkedList()
    {
        Head = null;
    }

    public void AddToEnd(int data)
    {
        Node newNode = new Node(data);
        if (Head == null)
        {
            Head = newNode;
            return;
        }

        Node temp = Head;
        while (temp.Next != null)
        {
            temp = temp.Next;
        }

        temp.Next = newNode;
        newNode.Prev = temp;
    }

    public void PrintList()
    {
        Node temp = Head;
        while (temp != null)
        {
            Console.Write(temp.Data + " ");
            temp = temp.Next;
        }
        Console.WriteLine();
    }
}

public class Program
{
    public static void ConvertToCircular(DoublyLinkedList list)
    {
        if (list.Head == null) return;

        Node last = list.Head;
        while (last.Next != null)
        {
            last = last.Next;
        }

        last.Next = list.Head;
        list.Head.Prev = last;
    }

    public static void PrintCircularList(Node head)
    {
        if (head == null) return;

        Node temp = head;
        do
        {
            Console.Write(temp.Data + " ");
            temp = temp.Next;
        } while (temp != head);
        Console.WriteLine();
    }

    public static void Main(string[] args)
    {
        DoublyLinkedList list = new DoublyLinkedList();
        list.AddToEnd(1);
        list.AddToEnd(2);
        list.AddToEnd(3);
        list.AddToEnd(4);

        Console.WriteLine("Original Doubly Linked List:");
        list.PrintList();

        ConvertToCircular(list);

        Console.WriteLine("Circular Doubly Linked List:");
        PrintCircularList(list.Head);
    }
}
